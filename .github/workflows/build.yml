name: build
'on':
  push: {}
  pull_request: {}
jobs:
  Windows:
    runs-on: windows-2019
    env:
      VS_PATH: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\'
      MSBUILD_PATH: >-
        C:\Program Files (x86)\Microsoft Visual
        Studio\2019\Enterprise\MSBuild\Current\Bin\
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-dept: 1
      - name: Configure CMake
        shell: cmd
        run: |
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release .. 
      - name: Build Project
        shell: cmd
        run: |
          cd build
          "%MSBUILD_PATH%\MSBuild.exe" PostBaby.sln /p:Configuration=Release /m
      - name: Package Application
        shell: cmd
        run: |
          cd build && cpack -C Release
  Linux:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: |
        sudo apt update -y
        sudo apt install -y build-essential libssl-dev cmake libx11-dev xorg-dev libglu1-mesa-dev 
    - name: Configure CMake
      run: |
        mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release ..
    - name: Build Project
      run: |
        cd build && make -j$(nproc)
    - name : Package Application
      run: |
        cd build && cpack -C Release
  MacOS:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: |
        brew update
    - name: Configure CMake
      run: |
        mkdir build && cd build 
        export PATH="/usr/local/opt/openssl/bin:$PATH"
        CXX=clang++ CC=clang cmake -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DOPENSSL_LIBRARIES=/usr/local/opt/openssl/lib -DCMAKE_BUILD_TYPE=Release ..
    - name: Build Project
      run: |
        cd build
        make -j$(nproc)

